#! /usr/bin/env ruby

require 'pg'
require 'date'

CONNECTION = PG.connect(dbname: "expenses")

def list_expenses
  result = CONNECTION.exec_params("SELECT * FROM expenses ORDER BY created_on ASC;")

  result.each do |tuple|
    columns = [ tuple["id"].rjust(3),
                tuple["created_on"],
                tuple["amount"].rjust(12),
                tuple["memo"] ]

    puts columns.join(" | ")
  end
end

def display_help
  puts <<~HELP
    An expense recording system

    Commands:

    add AMOUNT MEMO - record a new expense
    clear - delete all expenses
    list - list all expenses
    delete NUMBER - remove expense with id NUMBER
    search QUERY - list expenses with a matching memo field
  HELP
end

def add_expense(amount, memo)
  CONNECTION.exec_params(
  (<<~SQL
    INSERT INTO expenses
                (amount, memo, created_on)
         VALUES ($1, $2, $3);
  SQL
  ), [amount, memo, Date.today])
end

command = ARGV.first # `ARGV` refers to array of CLI arguments to `./expense` execution
if command == 'list'
  list_expenses
elsif command == 'add'
  amount = ARGV[1]
  memo = ARGV[2]
  abort "You must provide an amount and memo." unless amount && memo
  add_expense(amount, memo)
else
  display_help
end
